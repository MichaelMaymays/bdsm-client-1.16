buildscript {
    repositories {
        mavenLocal()
        maven { url = 'http://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.1.+'
    }
}

import net.minecraftforge.forge.tasks.*

apply plugin: 'eclipse'
apply plugin: 'net.minecraftforge.gradle.patcher'

project.ext.lwjglVersion = "3.2.3"
project.ext.lwjglNatives = "natives-windows"

configurations {
    shade
    compile.extendsFrom shade
}

group = 'me.yourname'
version = '1.0.0'

ext {
    minecraft_version = '1.16.5'
    mcp_version = '20210115.111550'
    mappings_channel = 'official'
    mappings_version = '1.16.5'
    spi_version = '3.2.0'
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        name = "jitpack.io"
        url = uri("https://jitpack.io")
    }
    maven {
        name = "impactdevelopment-repo"
        url = uri("https://impactdevelopment.github.io/maven/")
    }
    maven {
        name = "Fabric"
        url = uri("http://maven.fabricmc.net/")
    }
}

dependencies {
    shade 'net.minecraftforge:forgespi:' + spi_version
//    Use the shade to add the lib to the jar
//    or use compile if you want to load the lib from the version.json
//    from a maven repo
//    shade 'package-here'
//    compile 'package-here'
	// kotlin
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.4.30'
	
	// imgui
	compile group: 'io.imgui.java', name: 'imgui-java-binding', version: '1.80-1.5.0'
    implementation("io.imgui.java:imgui-java-lwjgl3:1.80-1.5.0") {
        exclude group: 'org.lwjgl'
        exclude group: 'org.lwjgl.lwjgl'
    }
	compile group: 'io.imgui.java', name: 'imgui-java-natives-linux', version: '1.80-1.5.0'
	compile group: 'io.imgui.java', name: 'imgui-java-natives-linux-x86', version: '1.80-1.5.0'
	compile group: 'io.imgui.java', name: 'imgui-java-natives-macos', version: '1.80-1.5.0'
	compile group: 'io.imgui.java', name: 'imgui-java-natives-windows', version: '1.80-1.5.0'
	compile group: 'io.imgui.java', name: 'imgui-java-natives-windows-x86', version: '1.80-1.5.0'
	
	// discord rpc
	compile group: 'com.github.Vatuu', name: 'discord-rpc', version: '1.6.2'
	
	// full lwjgl build so i can use glu projection and other things
	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-assimp"
	implementation "org.lwjgl:lwjgl-bgfx"
	implementation "org.lwjgl:lwjgl-cuda"
	implementation "org.lwjgl:lwjgl-egl"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-jawt"
	implementation "org.lwjgl:lwjgl-jemalloc"
	implementation "org.lwjgl:lwjgl-libdivide"
	implementation "org.lwjgl:lwjgl-llvm"
	implementation "org.lwjgl:lwjgl-lmdb"
	implementation "org.lwjgl:lwjgl-lz4"
	implementation "org.lwjgl:lwjgl-meow"
	implementation "org.lwjgl:lwjgl-nanovg"
	implementation "org.lwjgl:lwjgl-nfd"
	implementation "org.lwjgl:lwjgl-nuklear"
	implementation "org.lwjgl:lwjgl-odbc"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-opencl"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-opengles"
	implementation "org.lwjgl:lwjgl-openvr"
	implementation "org.lwjgl:lwjgl-opus"
	implementation "org.lwjgl:lwjgl-ovr"
	implementation "org.lwjgl:lwjgl-par"
	implementation "org.lwjgl:lwjgl-remotery"
	implementation "org.lwjgl:lwjgl-rpmalloc"
	implementation "org.lwjgl:lwjgl-shaderc"
	implementation "org.lwjgl:lwjgl-sse"
	implementation "org.lwjgl:lwjgl-stb"
	implementation "org.lwjgl:lwjgl-tinyexr"
	implementation "org.lwjgl:lwjgl-tinyfd"
	implementation "org.lwjgl:lwjgl-tootle"
	implementation "org.lwjgl:lwjgl-vma"
	implementation "org.lwjgl:lwjgl-vulkan"
	implementation "org.lwjgl:lwjgl-xxhash"
	implementation "org.lwjgl:lwjgl-yoga"
	implementation "org.lwjgl:lwjgl-zstd"
	runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-jemalloc::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-libdivide::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-llvm::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-lmdb::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-lz4::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-meow::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengles::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openvr::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opus::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-ovr::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-remotery::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-rpmalloc::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-sse::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-tinyexr::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-tinyfd::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-tootle::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-vma::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-xxhash::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-yoga::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-zstd::$lwjglNatives"
}

project(':mcp') {
    apply plugin: 'net.minecraftforge.gradle.mcp'
    mcp {
        config = minecraft_version + '-' + mcp_version
        pipeline = 'joined'
    }
}

evaluationDependsOn(':mcp')

patcher {
    parent = project(':mcp')
    patchedSrc = file('src/main/java')
    mappings channel: mappings_channel, version: mappings_version
    mcVersion = minecraft_version
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

task runclient(type: JavaExec) {
    group = "MCP"
    description = "Runs the client"
    classpath sourceSets.main.runtimeClasspath
    if (System.getProperty("os.name").toLowerCase().contains("mac")) {
        jvmArgs '-XstartOnFirstThread'
    }
    args '--gameDir', '.'
    args '--version', minecraft_version
    args '--assetsDir', downloadAssets.output
    args '--assetIndex', "1.16"
    args '--accessToken', '0'
    main 'net.minecraft.client.main.Main'
    workingDir 'run'
}

task setup() {
    group = "MCP"
    description = "Setups the dev workspace"
    dependsOn ':extractMapped'
    mkdir 'run/assets'
    copy {
        from downloadAssets.output.path
        into 'run/assets'
    }
}

task copyAssets {
    group = "MCP"
    description = "Download and place the assets into the run folder"
    dependsOn ':downloadAssets'
    mkdir 'run/assets'
    copy {
        from downloadAssets.output.path
        into 'run/assets'
    }
}
